<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Libmemo.MapPage"
             xmlns:local="clr-namespace:Libmemo"
             NavigationPage.HasNavigationBar="True"
             NavigationPage.TitleIcon="icon.png"
             Title="Карта"
             >
    <ContentPage.Resources>
        <ResourceDictionary>
            <Color x:Key="folowUserColorText">#0000FF</Color>
            <Color x:Key="folowUserColorBG">LightBlue</Color>
            <local:FollowUserMapButtonColorConverter x:Key="followUserConverter"/>
            <local:IsPropertyNullConverter x:Key="IsPropertyNullConverter"/>
            <local:IsPinSpeakableConverter x:Key="IsPinSpeakable"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem Name="Поиск"
                     Command="{Binding SearchCommand}"
                     Icon="icon.png"
                     />
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <RelativeLayout>
            <StackLayout x:Name="mapStack"
                         RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent ,Property=Width,Factor=1,Constant=0}"
                         RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent ,Property=Height,Factor=1,Constant=0}"
                         >
                <local:CustomMap x:Name="mainMap"
                                 CustomMapType="{Binding MapType}"
                                 MapFunctions="{Binding MapFunctions}"
                                 MapCenter="{Binding MapCenter}"
                                 Zoom="{Binding Zoom}"
                                 IsCameraAnimated="{Binding IsCameraAnimated}"
                                 IsRotateGesturesEnabled="{Binding Path=IsRotateGesturesEnabled, Mode=OneWay}"
                                 IsScrollGesturesEnabled="{Binding Path=IsScrollGesturesEnabled, Mode=OneWay}"
                                 IsTiltGesturesEnabled="{Binding Path=IsTiltGesturesEnabled, Mode=OneWay}"
                                 IsZoomGesturesEnabled="{Binding Path=IsZoomGesturesEnabled, Mode=OneWay}"
                                 SelectedPin="{Binding SelectedPin}"
                                 CustomPins="{Binding CustomPins}"
                                 InfoWindowClickedCommand="{Binding InfoWindowClickedCommand}"
                                 UserPositionChangedCommand="{Binding UserPositionChangedCommand}"
                                 RouteTo="{Binding RouteTo}"
                                 RouteInitializingSucceedCommand="{Binding RouteInitializingSucceedCommand}"
                                 RouteInitializingFailedCommand="{Binding RouteInitializingFailedCommand}"
                                 MyLocationEnabled="{Binding MyLocationEnabled}"
                                 IsShowInfoWindow="True"
                                 />
            </StackLayout>
            <StackLayout x:Name="left"
                         Orientation="Vertical"
                         RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=50}"
                         RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1}"
                         RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=0,Constant=0}"
                         RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height,Factor=0,Constant=0}"
                         >
                <StackLayout x:Name="topLeft"
                             Orientation="Vertical"
                             VerticalOptions="StartAndExpand"
                             HorizontalOptions="Fill"
                             Spacing="0"
                             >
                    <Button x:Name="showPinsButton"
                            Text="Show"
                            FontSize="Micro"
                            WidthRequest="50"
                            HeightRequest="50"
                            IsVisible="{Binding IsShowOnlySelected}"
                            Command="{Binding ShowPinsCommand}"
                            />
                    <Button x:Name="hidePinsButton"
                            Text="Hide"
                            FontSize="Micro"
                            WidthRequest="50"
                            HeightRequest="50"
                            IsVisible="{Binding IsShowHideAnotherButton}"
                            Command="{Binding HidePinsCommand}"
                            />
                </StackLayout>
                <StackLayout x:Name="bottomLeft"
                             Orientation="Vertical"
                             VerticalOptions="EndAndExpand"
                             HorizontalOptions="Fill"
                             Spacing="0"
                             >
                    <Button x:Name="streetTypeButton"
                            Text="Street"
                            FontSize="Micro"
                            WidthRequest="50"
                            HeightRequest="50"
                            Command="{Binding StreetMapCommand}"
                            />
                    <Button x:Name="spaceTypeButton"
                            Text="Space"
                            FontSize="Micro"
                            WidthRequest="50"
                            HeightRequest="50"
                            Command="{Binding SpaceMapCommand}"
                            />
                </StackLayout>
            </StackLayout>
            <StackLayout x:Name="right"
                         Orientation="Vertical"
                         RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=50}"
                         RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1}"
                         RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=1,Constant=-50}"
                         RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height,Factor=0,Constant=0}"
                         >
                <StackLayout x:Name="topRight"
                             VerticalOptions="StartAndExpand"
                             HorizontalOptions="Fill"
                             Spacing="0"
                             >
                    <Button x:Name="startTTSButton"
                            Text="&#9654;"
                            BackgroundColor="Green"
                            FontSize="Large"
                            WidthRequest="50"
                            HeightRequest="50"
                            IsVisible="{Binding Path=SelectedPin, Mode=OneWay, Converter={StaticResource IsPinSpeakable}"
                            Command="{Binding StartTTSOnSelectedPinCommand}"
                            />
                    <Button x:Name="stopTTSButton"
                            Text="&#9632;"
                            FontSize="Large"
                            BackgroundColor="Red"
                            WidthRequest="50"
                            HeightRequest="50"
                            IsVisible="{Binding Path=CurrentPlayed, Mode=OneWay, Converter={StaticResource IsPropertyNullConverter}"
                            Command="{Binding StopTTSCommand}"
                            />
                </StackLayout>
                <StackLayout x:Name="bottomRight"
                             Orientation="Vertical"
                             VerticalOptions="EndAndExpand"
                             HorizontalOptions="Fill"
                             Spacing="0"
                             >
                    <Button x:Name="geoFixButton"
                            Text="&#x2295;"
                            TextColor="{Binding Path=FollowUser, Mode=OneWay, Converter={StaticResource followUserConverter}, ConverterParameter={StaticResource folowUserColorText}}"
                            BackgroundColor="{Binding Path=FollowUser, Mode=OneWay, Converter={StaticResource followUserConverter}, ConverterParameter={StaticResource folowUserColorBG}}"
                            FontSize="Large"
                            WidthRequest="50"
                            HeightRequest="50"
                            Command="{Binding FollowUserToogleCommand}"
                            />
                </StackLayout>
            </StackLayout>
            <StackLayout x:Name="bottom"
                         Orientation="Horizontal"
                         RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"
                         RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=50}"
                         RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent,Property=Width,Factor=0,Constant=0}"
                         RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent,Property=Height,Factor=1,Constant=-50}"  
                         >
                <StackLayout x:Name="bottomCenter"
                             Orientation="Horizontal"
                             VerticalOptions="Fill"
                             HorizontalOptions="CenterAndExpand"
                             Spacing="0"
                             >
                    <Button x:Name="setLinearRouteButton"
                            Text="&#8600;"
                            FontSize="Medium"
                            WidthRequest="50"
                            HeightRequest="50"
                            IsVisible="{Binding Path=SelectedPin, Mode=OneWay, Converter={StaticResource IsPropertyNullConverter}"
                            Command="{Binding SetLinearRouteCommand}"
                            />
                    <Button x:Name="setCalculatedRouteButton"
                            Text="&#9736;"
                            FontSize="Medium"
                            WidthRequest="50"
                            HeightRequest="50"
                            IsVisible="{Binding Path=SelectedPin, Mode=OneWay, Converter={StaticResource IsPropertyNullConverter}"
                            Command="{Binding SetCalculatedRouteCommand}"
                            />
                    <Button x:Name="deleteRouteButton"
                            Text="&#8603;"
                            FontSize="Large"
                            WidthRequest="50"
                            HeightRequest="50"
                            IsVisible="{Binding IsRouteActive}"
                            Command="{Binding DeleteRouteCommand}"
                            />
                </StackLayout>
            </StackLayout>
        </RelativeLayout>
    </ContentPage.Content>
</ContentPage>